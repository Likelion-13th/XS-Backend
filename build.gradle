plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'likelion13gi'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// ✅ Spring Boot Data JPA: 3.4.2로 고정 (호환성 유지)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.4.2'

	// ✅ ANTLR 버전 명시 (4.13.0)
	implementation 'org.antlr:antlr4-runtime:4.13.0'
	runtimeOnly 'org.antlr:antlr4-runtime:4.13.0'

	// ✅ ANTLR 충돌 방지 (기존 버전 강제)
	configurations.all {
		resolutionStrategy.eachDependency { details ->
			if (details.requested.group == 'org.antlr') {
				details.useVersion '4.13.0'
			}
		}
	}

	// ✅ 기존 의존성들
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.security:spring-security-config'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	implementation 'org.springframework.boot:spring-boot-starter'
	// ✅ JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// ✅ Database and Hibernate
	runtimeOnly 'com.mysql:mysql-connector-j'
	//runtimeOnly 'mysql:mysql-connector-java:8.0.33'
	implementation 'org.hibernate.orm:hibernate-core:6.2.7.Final'

	// ✅ Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// ✅ Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// ✅ AWS SDK for S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
}
/*tasks.named('test') {
   useJUnitPlatform()
}*/

// ✅ 일반 jar 생성 비활성화 (bootJar만 생성)
tasks.named('jar') {
	enabled = false
}